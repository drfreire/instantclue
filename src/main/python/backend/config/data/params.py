
import matplotlib.font_manager
from ...color.data import colorParameterRange
from ...statistics.statistics import clusteringMethodNames

import numpy as np

clusterMethodNames = list(clusteringMethodNames.keys())
REQUIRED_ATTR_NAMES = ["id","name","value","dtype","range","parent","parentType","description"]
arrowOptions = ["arc3","arc3,rad=0.","arc3,rad=0.3","arc3,rad=-0.3",
                "angle,angleA=-90,angleB=180,rad=0",
                "angle,angleA=-90,angleB=180,rad=5",
                "angle,angleA=-90,angleB=10,rad=5",
                "arc,angleA=-90,angleB=0,armA=30,armB=30,rad=0",
                "arc,angleA=-90,angleB=0,armA=30,armB=30,rad=5",
                "arc,angleA=-90,angleB=0,armA=0,armB=40,rad=0",
                "bar,fraction=0.3",
                "bar,fraction=-0.3",
                "bar,angle=180,fraction=-0.2"]
encodingsCommonInPython = ['utf-8','ascii','ISO-8859-1','iso8859_15','cp037','cp1252','big5','euc_jp']
commonSepartor = ['tab',',','space',';','/','&','|','^','+','-']
decimalForFloats = ['.',','] 
compressionsForSourceFile = ['infer','gzip', 'bz2', 'zip', 'xz']
nanReplaceString = ['-','None', 'nan','  ']
thoursandsString = ['None',',','.']
MTMethods = ["bonferroni","sidak","holm-sidak","holm","simes-hochberg","hommel","fdr_bh","fdr_by","fdr_tsbh","fdr_tsbky"]
FONT_FAMILIES = np.unique([f.name for f in matplotlib.font_manager.fontManager.afmlist]).tolist()

DEFAULT_PARAMETER = [
    {
    "name"          :   "label.font.size",
    "value"         :   12,
    "dtype"         :   float,
    "range"         :   [0.5,np.inf],
    "parent"        :   "intern",
    "parentType"    :   "GUI Settings",
    "description"   :   "Standard fontsize for the graphical user interface. The effect will only be visible after a restart."
    },
    {
    "name"          :   "label.font.family",
    "value"         :   "Helvetica",
    "dtype"         :   str,
    "range"         :   ["Helvetica"],
    "parent"        :   "intern",
    "parentType"    :   "GUI Settings",
    "description"   :   "Standard fontsize for the graphical user interface. The effect will only be visible after a restart."
    },

    {
    "name"          :   "load.file.encoding",
    "value"         :   "utf-8",
    "dtype"         :   str,
    "range"         :   encodingsCommonInPython,
    "parent"        :   "intern",
    "parentType"    :   "Load File Settings",
    "description"   :   "Encoding used to read files."
    },
    {
    "name"          :   "load.file.skiprows",
    "value"         :   0,
    "dtype"         :   int,
    "range"         :   [0,np.inf],
    "parent"        :   "intern",
    "parentType"    :   "Load File Settings",
    "description"   :   "Number of rows to skip"
    }, 
    {
    "name"          :   "load.file.column.separator",
    "value"         :   "tab",
    "dtype"         :   str,
    "range"         :   commonSepartor,
    "parent"        :   "intern",
    "parentType"    :   "Load File Settings",
    "description"   :   "Separator to find columns in file."
    },
    {
    "name"          :   "load.file.float.decimal",
    "value"         :   ".",
    "dtype"         :   str,
    "range"         :   decimalForFloats,
    "parent"        :   "intern",
    "parentType"    :   "Load File Settings",
    "description"   :   "Decimal in numbers."
    },
    {
    "name"          :   "load.file.float.thousands",
    "value"         :   "None",
    "dtype"         :   str,
    "range"         :   thoursandsString,
    "parent"        :   "intern",
    "parentType"    :   "Load File Settings",
    "description"   :   "None if no thousands separator is present."
    },
    {
    "name"          :   "load.file.na.values",
    "value"         :   "#VALUE!;#DIV/0!",
    "dtype"         :   str,
    "range"         :   "any",
    "parent"        :   "intern",
    "parentType"    :   "Load File Settings",
    "description"   :   "Additional na values. If you want to provide multiple value separate them by a semicolon ';'."
    },

    
    {
    "name"          :   "Object Replace String",
    "value"         :   "-",
    "dtype"         :   str,
    "range"         :   "any",
    "parent"        :   "intern",
    "parentType"    :   "Load File Settings",
    "description"   :   "Missing categories will be replaced by this string."
    }, 
    {
    "name"          :   "data.view.use.clipping",
    "value"         :   True,
    "dtype"         :   bool,
    "range"         :   [True,False],
    "parent"        :   "intern",
    "parentType"    :   "Data Settings",
    "description"   :   "If True, viewing the data will use clipping if QuickSelect widgets."
    },
    {
    "name"          :   "data.quick.subset.ignore.nanString",
    "value"         :   True,
    "dtype"         :   bool,
    "range"         :   [True,False],
    "parent"        :   "intern",
    "parentType"    :   "Data Settings",
    "description"   :   "If True, when subsetting data using the QuickFilter Icon (top-left) the given nanString ('-' by default) will be ignored. If False, it will not be ignored."
    },
    {
    "name"          :   "data.shortcut.subset.operator",
    "value"         :   "or",
    "dtype"         :   str,
    "range"         :   ["or","and"],
    "parent"        :   "intern",
    "parentType"    :   "Data Settings",
    "description"   :   "Subsetting using useful shortcuts is avaible for categorical columns using the context menu.\nThe operator is used when multiple columns are selected."
    },
    {
    "name"          :   "explode.split.string",
    "value"         :   ";",
    "dtype"         :   str,
    "range"         :   "any",
    "parent"        :   "intern",
    "parentType"    :   "Data Settings",
    "description"   :   "Split string to be used when the explode function is applied."
    },
    {
    "name"          :   "colorMap",
    "value"         :   "RdYlBu",
    "dtype"         :   str,
    "range"         :   colorParameterRange,
    "parent"        :   "colorManager",
    "parentType"    :   "Color Settings",
    "description"   :   "Default color palette used for plots."
    },
    {
    "name"          :   "arrowColor",
    "value"         :   "#5C5C5B",
    "dtype"         :   str,
    "range"         :   "regExMatch",
    "parent"        :   "intern",
    "parentType"    :   "Annotation Settings",
    "description"   :   "Arrow color.",
    "regEx"         :   r"^#(?:[0-9a-fA-F]{6}){1,2}$"
    },
    {
    "name"          :   "arrowStyle",
    "value"         :   "arc3",
    "dtype"         :   str,
    "range"         :   arrowOptions,
    "parent"        :   "intern",
    "parentType"    :   "Annotation Settings",
    "description"   :   "Style of arrow used to annotate scatter plots."
    },
    {
    "name"          :   "annotationFontSize",
    "value"         :   8,
    "dtype"         :   int,
    "range"         :   [0,np.inf],
    "parent"        :   "intern",
    "parentType"    :   "Annotation Settings",
    "description"   :   "Font size of annotations."
    },
    {
    "name"          :   "annotationFontFamily",
    "value"         :   "monospace",
    "dtype"         :   str,
    "range"         :   ["monospace","serif","sans-serif","Arial"],
    "parent"        :   "intern",
    "parentType"    :   "Annotation Settings",
    "description"   :   "Font size of annotations."
    },
    {
    "name"          :   "multiLineAnnotation",
    "value"         :   "new line",
    "dtype"         :   str,
    "range"         :   ["tab","new line","_",";"],
    "parent"        :   "intern",
    "parentType"    :   "Annotation Settings",
    "description"   :   "How to handle multi line annotations."
    },
    {
    "name"          :   "annotate.in.all.plots",
    "value"         :   False,
    "dtype"         :   bool,
    "range"         :   [True,False],
    "parent"        :   "intern",
    "parentType"    :   "Annotation Settings",
    "description"   :   "If enabled, annotations will be made in all active scatter plots."
    },
    {
    "name"          :   "twoColorMap",
    "value"         :   "RdBu_r",
    "dtype"         :   str,
    "range"         :   colorParameterRange,
    "parent"        :   "colorManager",
    "parentType"    :   "Color Settings",
    "description"   :   "Default color palette used for two color plots such as heatmaps."
    },
    {
    "name"          :   "hclustSizeColorMap",
    "value"         :   "Paired",
    "dtype"         :   str,
    "range"         :   colorParameterRange,
    "parent"        :   "colorManager",
    "parentType"    :   "Color Settings",
    "description"   :   "Default color palette used for size color maps in heatmaps."
    },
    {
    "name"          :   "quickSelectColorMap",
    "value"         :   "Paired",
    "dtype"         :   str,
    "range"         :   colorParameterRange,
    "parent"        :   "colorManager",
    "parentType"    :   "Color Settings",
    "description"   :   "Default color palette used to label selections in Quick Select widget."
    },
    {
    "name"          :   "alpha",
    "value"         :   0.75,
    "dtype"         :   float,
    "range"         :   [0,1],
    "parent"        :   "colorManager",
    "parentType"    :   "Color Settings",
    "description"   :   "Sets alpha of scatter markers."
    },
    {
    "name"          :   "desat",
    "value"         :   0.85,
    "dtype"         :   float,
    "range"         :   [0,1],
    "parent"        :   "colorManager",
    "parentType"    :   "Color Settings",
    "description"   :   "Sets desaturation of colors."
    },
    {
    "name"          :   "nanColor",
    "value"         :   "#efefef",
    "dtype"         :   str,
    "range"         :   "regExMatch",
    "parent"        :   "colorManager",
    "parentType"    :   "Color Settings",
    "description"   :   "Color for nanValues, '-' or custom nanString in plots.",
    "regEx"         :   r"^#(?:[0-9a-fA-F]{6}){1,2}$"
    },
    {
    "name"          :   "axis.title.box.background",
    "value"         :   "#efefef",
    "dtype"         :   str,
    "range"         :   "regExMatch",
    "parent"        :   "intern",
    "parentType"    :   "Color Settings",
    "description"   :   "Background color for title boxes.",
    "regEx"         :   r"^#(?:[0-9a-fA-F]{6}){1,2}$"
    },
    {
    "name"          :   "replaceObjectNan",
    "value"         :   "-",
    "dtype"         :   str,
    "range"         :   "any",
    "parent"        :   "data",
    "parentType"    :   "Filter Settings",
    "description"   :   "Sets the default string to replace missing objects in categorical column.\nThis string will also be used when a categorical filtering is applied.",
    },
    {
    "name"          :   "splitString",
    "value"         :   ";",
    "dtype"         :   str,
    "range"         :   "any",
    "parent"        :   "categoricalFilter",
    "parentType"    :   "Filter Settings",
    "description"   :   "Sets the default splitString to find categories in filters.",
    },
    {
    "name"          :   "minStringLength",
    "value"         :   3,
    "dtype"         :   int,
    "range"         :   [1,np.inf],
    "parent"        :   "categoricalFilter",
    "parentType"    :   "Filter Settings",
    "description"   :   "Sets the default minimum string length before the data view is updated.",
    },
    {
    "name"          :   "operator",
    "value"         :   "and",
    "dtype"         :   str,
    "range"         :   ["and","or"],
    "parent"        :   "numericFilter",
    "parentType"    :   "Filter Settings",
    "description"   :   "Sets the default operator for numeric filtering.",
    },
    {
    "name"          :   "leading.string.numeric.filter",
    "value"         :   "NumericFilter_",
    "dtype"         :   str,
    "range"         :   "any",
    "parent"        :   "intern",
    "parentType"    :   "Filter Settings",
    "description"   :   "Leading string for column names created by numerical filtering.",
    },
    {
    "name"          :   "leading.string.numeric.filter.subset",
    "value"         :   "NumericSubset_",
    "dtype"         :   str,
    "range"         :   "any",
    "parent"        :   "intern",
    "parentType"    :   "Filter Settings",
    "description"   :   "Leading string for subsets created by numerical filtering.",
    },
    {
    "name"          :   "axes.facecolor",
    "value"         :   "#FFFFFF",
    "dtype"         :   str,
    "range"         :   "regExMatch",
    "parent"        :   "matplotlib",
    "parentType"    :   "Matplotlib Settings",
    "description"   :   "Sets the background of plot axes.",
    "regEx"         :   r"^#(?:[0-9a-fA-F]{6}){1,2}$"
    },
    {
    "name"          :   "axes.grid",
    "value"         :   False,
    "dtype"         :   bool,
    "range"         :   [True,False],
    "parent"        :   "matplotlib",
    "parentType"    :   "Matplotlib Settings",
    "description"   :   "Enable/disable axis grid.",
    },
    {
    "name"          :   "axes.grid.axis",
    "value"         :   "both",
    "dtype"         :   str,
    "range"         :   ["x", "y", "both"],
    "parent"        :   "matplotlib",
    "parentType"    :   "Matplotlib Settings",
    "description"   :   "Enable/disable axis grid for specific axis.",
    },
    {
    "name"          :   "axes.grid.which",
    "value"         :   "both",
    "dtype"         :   str,
    "range"         :   ["major", "minor", "both"],
    "parent"        :   "matplotlib",
    "parentType"    :   "Matplotlib Settings",
    "description"   :   "Which axis grid lines should be drawn.",
    },
    {
    "name"          :   "axes.labelsize",
    "value"         :   8,
    "dtype"         :   int,
    "range"         :   [1,np.inf],
    "parent"        :   "matplotlib",
    "parentType"    :   "Matplotlib Settings",
    "description"   :   "Sets font size of x- and y-axis labels.",
    },
    {
    "name"          :   "axes.titlesize",
    "value"         :   8,
    "dtype"         :   int,
    "range"         :   [1,np.inf],
    "parent"        :   "matplotlib",
    "parentType"    :   "Matplotlib Settings",
    "description"   :   "Sets font size axis title labels.",
    },
    {
    "name"          :   "axes.linewidth",
    "value"         :   0.6,
    "dtype"         :   float,
    "range"         :   [0.1,np.inf],
    "parent"        :   "matplotlib",
    "parentType"    :   "Matplotlib Settings",
    "description"   :   "Sets font size of x- and y-axis labels.",
    },
    {
    "name"          :   "savefig.dpi",
    "value"         :   600,
    "dtype"         :   int,
    "range"         :   [72,800],
    "parent"        :   "matplotlib",
    "parentType"    :   "Matplotlib Settings",
    "description"   :   "Sets the dpi for png exports.",
    },
    {
    "name"          :   "xtick.labelsize",
    "value"         :   8,
    "dtype"         :   int,
    "range"         :   [2,np.inf],
    "parent"        :   "matplotlib",
    "parentType"    :   "Matplotlib Settings",
    "description"   :   "Sets font size of xtick labels.",
    },
    {
    "name"          :   "ytick.labelsize",
    "value"         :   8,
    "dtype"         :   int,
    "range"         :   [2,np.inf],
    "parent"        :   "matplotlib",
    "parentType"    :   "Matplotlib Settings",
    "description"   :   "Sets font size of ytick labels.",
    },
    {
    "name"          :   "xtick.direction",
    "value"         :   "in",
    "dtype"         :   str,
    "range"         :   ["in","out"],
    "parent"        :   "matplotlib",
    "parentType"    :   "Matplotlib Settings",
    "description"   :   "Sets font size of xtick labels.",
    },
    {
    "name"          :   "ytick.direction",
    "value"         :   "in",
    "dtype"         :   str,
    "range"         :   ["in","out"],
    "parent"        :   "matplotlib",
    "parentType"    :   "Matplotlib Settings",
    "description"   :   "Sets font size of ytick labels.",
    },
    {
    "name"          :   "xtick.major.size",
    "value"         :   3,
    "dtype"         :   int,
    "range"         :   [1,np.inf],
    "parent"        :   "matplotlib",
    "parentType"    :   "Matplotlib Settings",
    "description"   :   "Sets length of xticks.",
    },
    {
    "name"          :   "xtick.major.size",
    "value"         :   3,
    "dtype"         :   int,
    "range"         :   [1,np.inf],
    "parent"        :   "matplotlib",
    "parentType"    :   "Matplotlib Settings",
    "description"   :   "Sets length of yticks.",
    },
    {
    "name"          :   "ytick.major.pad",
    "value"         :   2,
    "dtype"         :   int,
    "range"         :   [-np.inf,np.inf],
    "parent"        :   "matplotlib",
    "parentType"    :   "Matplotlib Settings",
    "description"   :   "Sets padding of xticks.",
    },
    {
    "name"          :   "ytick.major.pad",
    "value"         :   2,
    "dtype"         :   int,
    "range"         :   [-np.inf,np.inf],
    "parent"        :   "matplotlib",
    "parentType"    :   "Matplotlib Settings",
    "description"   :   "Sets padding of yticks.",
    },
    {
    "name"          :   "ytick.minor.visible",
    "value"         :   True,
    "dtype"         :   bool,
    "range"         :   [True,False],
    "parent"        :   "matplotlib",
    "parentType"    :   "Matplotlib Settings",
    "description"   :   "Enable/disable minor ticks on y axis.",
    },
    {
    "name"          :   "xtick.minor.visible",
    "value"         :   True,
    "dtype"         :   bool,
    "range"         :   [True,False],
    "parent"        :   "matplotlib",
    "parentType"    :   "Matplotlib Settings",
    "description"   :   "Enable/disable minor ticks on x axis.",
    },   
    {
    "name"          :   "legend.fontsize",
    "value"         :   6,
    "dtype"         :   float,
    "range"         :   [2,np.inf],
    "parent"        :   "intern",
    "parentType"    :   "Legend Settings",
    "description"   :   "Legend font size for legends.",
    },
    {
    "name"          :   "legend.mainfigure.fontsize",
    "value"         :   4,
    "dtype"         :   float,
    "range"         :   [2,np.inf],
    "parent"        :   "intern",
    "parentType"    :   "Legend Settings",
    "description"   :   "Legend font size for main figure exports.",
    },
    {
    "name"          :   "legend.title.fontsize",
    "value"         :   7,
    "dtype"         :   float,
    "range"         :   [2,np.inf],
    "parent"        :   "intern",
    "parentType"    :   "Legend Settings",
    "description"   :   "Legend font size for legends.",
    },
    {
    "name"          :   "legend.title.mainfigure.fontsize",
    "value"         :   5,
    "dtype"         :   float,
    "range"         :   [2,np.inf],
    "parent"        :   "intern",
    "parentType"    :   "Legend Settings",
    "description"   :   "Legend font size for main figure exports.",
    },
    {
    "name"          :   "legend.label.spacing",
    "value"         :   0.75,
    "dtype"         :   float,
    "range"         :   [0,np.inf],
    "parent"        :   "intern",
    "parentType"    :   "Legend Settings",
    "description"   :   "Vertical Legend Spacing.",
    },
    {
    "name"          :   "legend.label.borderpad",
    "value"         :   0.5,
    "dtype"         :   float,
    "range"         :   [0,np.inf],
    "parent"        :   "intern",
    "parentType"    :   "Legend Settings",
    "description"   :   "The fractional whitespace inside the legend border. Measured in font-size units.",
    },

   
    {
    "name"          :   "pdf.fonttype",
    "value"         :   42,
    "dtype"         :   int,
    "range"         :   [3,42],
    "parent"        :   "matplotlib",
    "parentType"    :   "Matplotlib Settings",
    "description"   :   "Set fonttype for pdf exports.",
    },
    {
    "name"          :   "boxplot.showfliers",
    "value"         :   True,
    "dtype"         :   bool,
    "range"         :   [True,False],
    "parent"        :   "matplotlib",
    "parentType"    :   "Boxplot Settings",
    "description"   :   "Show outliers in boxplots.",
    },
    {
    "name"          :   "boxplot.split.data.on.category",
    "value"         :   True,
    "dtype"         :   bool,
    "range"         :   [True,False],
    "parent"        :   "matplotlib",
    "parentType"    :   "Boxplot Settings",
    "description"   :   "Splits data based on values in the receiver box 'Categories'.\nIf disabled. the whole dataset will be plotted against the category setups, without splitting before.",
    },
    {
    "name"          :   "boxplot.flierprops.markeredgewidth",
    "value"         :   0.5,
    "dtype"         :   float,
    "range"         :   [0.05,np.inf],
    "parent"        :   "matplotlib",
    "parentType"    :   "Boxplot Settings",
    "description"   :   "Linewidth of outliers in boxplots.",
    },
    {
    "name"          :   "boxplot.flierprops.markeredgecolor",
    "value"         :   "#2E2E2E",
    "dtype"         :   str,
    "range"         :   "regExMatch",
    "parent"        :   "matplotlib",
    "parentType"    :   "Boxplot Settings",
    "description"   :   "Edge marker color for outliers in boxplots.",
    "regEx"         :   r"^#(?:[0-9a-fA-F]{6}){1,2}$"
    }, 
    {
    "name"          :   "boxplot.flierprops.markersize",
    "value"         :   5,
    "dtype"         :   float,
    "range"         :   [0.1,np.inf],
    "parent"        :   "matplotlib",
    "parentType"    :   "Boxplot Settings",
    "description"   :   "Edge marker color for outliers in boxplots.",
    }, 
    {
    "name"          :   "boxplot.flierprops.marker",
    "value"         :   "+",
    "dtype"         :   str,
    "range"         :   ["o","+","s",".","<",">","^","v",",","h"],
    "parent"        :   "matplotlib",
    "parentType"    :   "Boxplot Settings",
    "description"   :   "Edge marker color for outliers in boxplots.",
    },
    {
    "name"          :   "boxplot.whiskers",
    "value"         :   1.5,
    "dtype"         :   float,
    "range"         :   [0.1,np.inf],
    "parent"        :   "matplotlib",
    "parentType"    :   "Boxplot Settings",
    "description"   :   "Whiskers in boxplots (n * IQR). Effects outliers.",
    },
    {
    "name"          :   "boxplot.boxprops.linewidth",
    "value"         :   0.5,
    "dtype"         :   float,
    "range"         :   [0.1,np.inf],
    "parent"        :   "matplotlib",
    "parentType"    :   "Boxplot Settings",
    "description"   :   "Line style of whiskers in boxplots.",
    },
    {
    "name"          :   "boxplot.whiskerprops.linestyle",
    "value"         :   "-",
    "dtype"         :   str,
    "range"         :   ["-",".","--","-."],
    "parent"        :   "matplotlib",
    "parentType"    :   "Boxplot Settings",
    "description"   :   "Line style of whiskers in boxplots.",
    },
    {
    "name"          :   "boxplot.whiskerprops.linewidth",
    "value"         :   0.5,
    "dtype"         :   float,
    "range"         :   [0.05,np.inf],
    "parent"        :   "matplotlib",
    "parentType"    :   "Boxplot Settings",
    "description"   :   "Linewidth of whiskers in boxplots.",
    },
    {
    "name"          :   "boxplot.showcaps",
    "value"         :   True,
    "dtype"         :   bool,
    "range"         :   [True,False],
    "parent"        :   "matplotlib",
    "parentType"    :   "Boxplot Settings",
    "description"   :   "Enable/disable caps on boxplot whiskers",
    },
     {
    "name"          :   "boxplot.medianprops.color",
    "value"         :   "#2E2E2E",
    "dtype"         :   str,
    "range"         :   "regExMatch",
    "parent"        :   "matplotlib",
    "parentType"    :   "Boxplot Settings",
    "description"   :   "Color for median line in boxplots.",
    "regEx"         :   r"^#(?:[0-9a-fA-F]{6}){1,2}$"
    }, 
    {
    "name"          :   "boxplot.medianprops.linewidth",
    "value"         :   0.5,
    "dtype"         :   float,
    "range"         :   [0.01,np.inf],
    "parent"        :   "matplotlib",
    "parentType"    :   "Boxplot Settings",
    "description"   :   "Linewidth of median line in boxplots.",
    },
    {
    "name"          :   "boxplot.showmeans",
    "value"         :   False,
    "dtype"         :   bool,
    "range"         :   [True,False],
    "parent"        :   "matplotlib",
    "parentType"    :   "Boxplot Settings",
    "description"   :   "Enable/disable mean for boxplots",
    },
    {
    "name"          :   "boxplot.meanprops.marker",
    "value"         :   "^",
    "dtype"         :   str,
    "range"         :   ["o","+","s",".","<",">","^","v",",","h"],
    "parent"        :   "matplotlib",
    "parentType"    :   "Boxplot Settings",
    "description"   :   "Marker for mean in boxplots.",
    },
    {
    "name"          :   "boxplot.meanprops.markerfacecolor",
    "value"         :   "#DEDEDE",
    "dtype"         :   str,
    "range"         :   "regExMatch",
    "parent"        :   "matplotlib",
    "parentType"    :   "Boxplot Settings",
    "description"   :   "Marker facecolor for mean in boxplots.",
    "regEx"         :   r"^#(?:[0-9a-fA-F]{6}){1,2}$"
    },  
    {
    "name"          :   "boxplot.meanprops.markeredgecolor",
    "value"         :   "#171717",
    "dtype"         :   str,
    "range"         :   "regExMatch",
    "parent"        :   "matplotlib",
    "parentType"    :   "Boxplot Settings",
    "description"   :   "Marker edgeecolor for mean in boxplots.",
    "regEx"         :   r"^#(?:[0-9a-fA-F]{6}){1,2}$"
    },  
    {
    "name"          :   "patch.edgecolor",
    "value"         :   "#171717",
    "dtype"         :   str,
    "range"         :   "regExMatch",
    "parent"        :   "matplotlib",
    "parentType"    :   "Patch Settings",
    "description"   :   "Linewidth of patches",
    "regEx"         :   r"^#(?:[0-9a-fA-F]{6}){1,2}$"
    },
    {
    "name"          :   "patch.linewidth",
    "value"         :   0.5,
    "dtype"         :   float,
    "range"         :   [0.05, np.inf],
    "parent"        :   "matplotlib",
    "parentType"    :   "Patch Settings",
    "description"   :   "Linewidth of patches",
    },  
   {
    "name"          :   "patch.force_edgecolor",
    "value"         :   True,
    "dtype"         :   bool,
    "range"         :   [True, False],
    "parent"        :   "matplotlib",
    "parentType"    :   "Patch Settings",
    "description"   :   "Force patches such as barplots to draw edgecolors.",
    }, 
    {
    "name"          :   "errorbar.capsize",
    "value"         :   3,
    "dtype"         :   float,
    "range"         :   [0.1,np.inf],
    "parent"        :   "matplotlib",
    "parentType"    :   "Matplotlib Settings",
    "description"   :   "With of errorbars in barplots / pointplots.",
    },   
    {
    "name"          :   "aggMethod",
    "value"         :   "mean",
    "dtype"         :   str,
    "range"         :   ["mean","sum"],
    "parent"        :   "plotterBrain",
    "parentType"    :   "Scatter Settings",
    "description"   :   "Aggregation method for multiple numeric columns encoded as color/size.",
    },
    {
    "name"          :   "scatterSize",
    "value"         :   50,
    "dtype"         :   int,
    "range"         :   [1,np.inf],
    "parent"        :   "plotterBrain",
    "parentType"    :   "Scatter Settings",
    "description"   :   "Default size of scatter points in pixel.",
    },
    {
    "name"          :   "maxScatterSize",
    "value"         :   120,
    "dtype"         :   int,
    "range"         :   [1,np.inf],
    "parent"        :   "plotterBrain",
    "parentType"    :   "Scatter Settings",
    "description"   :   "Maximal size of scatter points in pixel when a value is encoded by size.",
    },
    {
    "name"          :   "minScatterSize",
    "value"         :   20,
    "dtype"         :   int,
    "range"         :   [1,np.inf],
    "parent"        :   "plotterBrain",
    "parentType"    :   "Scatter Settings",
    "description"   :   "Minimal size of scatter points in pixel when a value is encoded by size.",
    },
    {
    "name"          :   "transform.numeric.size.columns",
    "value"         :   "None",
    "dtype"         :   str,
    "range"         :   ["None","log2","ln","log10"],
    "parent"        :   "plotterBrain",
    "parentType"    :   "Scatter Settings",
    "description"   :   "Transform numeric values before encoding them as size. Helpful if the range is huge (e.g. > E05).",
    },
    {
    "name"          :   "scatter.edgecolor",
    "value"         :   "#171717",
    "dtype"         :   str,
    "range"         :   "regExMatch",
    "parent"        :   "intern",
    "parentType"    :   "Scatter Settings",
    "description"   :   "Edgecolors of scatter points.",
    "regEx"         :   r"^#(?:[0-9a-fA-F]{6}){1,2}$"
    },
    {
    "name"          :   "scatter.hover.color",
    "value"         :   "#B31C19",
    "dtype"         :   str,
    "range"         :   "regExMatch",
    "parent"        :   "intern",
    "parentType"    :   "Scatter Settings",
    "description"   :   "Marker facecolor for hover scatter points.",
    "regEx"         :   r"^#(?:[0-9a-fA-F]{6}){1,2}$"
    },
    {
    "name"          :   "scatter.edgelinewidth",
    "value"         :   0.3,
    "dtype"         :   float,
    "range"         :   [0.1,np.inf],
    "parent"        :   "intern",
    "parentType"    :   "Scatter Settings",
    "description"   :   "Line width of edges of scatter points.",
    },
    {
    "name"          :   "scatter.marker",
    "value"         :   "o",
    "dtype"         :   str,
    "range"         :   ["o","+","s",".","<",">","^","v",",","h"],
    "parent"        :   "intern",
    "parentType"    :   "Scatter Settings",
    "description"   :   "Marker for scatter plot. (, equals pixel).",
    },
    {
    "name"          :   "scatter.equal.axis.limits",
    "value"         :   False,
    "dtype"         :   bool,
    "range"         :   [True,False],
    "parent"        :   "intern",
    "parentType"    :   "Scatter Settings",
    "description"   :   "If true, all scatter plots will have equal axis limits.",
    },
    {
    "name"          :   "plotAgainstIndex",
    "value"         :   False,
    "dtype"         :   bool,
    "range"         :   [True,False],
    "parent"        :   "plotterBrain",
    "parentType"    :   "Scatter Settings",
    "description"   :   "If enabled, plots data of each numeric columna against its sorted index.",
    },
    {
    "name"          :   "indexSort",
    "value"         :   "ascending",
    "dtype"         :   str,
    "range"         :   ["ascending","descending"],
    "parent"        :   "plotterBrain",
    "parentType"    :   "Scatter Settings",
    "description"   :   "If enabled, plots data of each numeric columna against its sorted index.",
    },
    {
    "name"          :   "selectionRectangleSize",
    "value"         :   0.05,
    "dtype"         :   float,
    "range"         :   [0.0,0.5],
    "parent"        :   "intern",
    "parentType"    :   "Select Settings",
    "description"   :   "Size of rectangle. Given in fraction of axis limits. 0 equals to single point selection.",
    },
    {
    "name"          :   "hover.inactive.facecolor",
    "value"         :   "#FFFFFF",
    "dtype"         :   str,
    "range"         :   "regExMatch",
    "parent"        :   "intern",
    "parentType"    :   "Hover/Tooltip Settings",
    "description"   :   "Facecolor of inactive (mouse not over) artists/items while hovering.",
    "regEx"         :   r"^#(?:[0-9a-fA-F]{6}){1,2}$"
    },
    {
    "name"          :   "absCorrCoeff",
    "value"         :   0,
    "dtype"         :   float,
    "range"         :   [0,1],
    "parent"        :   "statCenter",
    "parentType"    :   "Correlation Settings",
    "description"   :   "Absolute cutoff to filter row correlation matrix.\nSet 0 to disable filtering (NaN will be removed).",
    },
    {
    "name"          :   "corrMethod",
    "value"         :   "pearson",
    "dtype"         :   str,
    "range"         :   ["pearson","kendall","spearman"],
    "parent"        :   "statCenter",
    "parentType"    :   "Correlation Settings",
    "description"   :   "Method to calculate correlation matrix.",
    },
    {
    "name"          :   "rowMetric",
    "value"         :   "euclidean",
    "dtype"         :   str,
    "range"         :   ["euclidean","nanEuclidean","correlation","None"],
    "parent"        :   "statCenter",
    "parentType"    :   "Cluster (HClust) Settings",
    "description"   :   "Define metric used for row dendrogram.If None, no dendrogram will be shown. Only nanEuclidean can handle nans and is significantly slower.",
    },
    {
    "name"          :   "columnMetric",
    "value"         :   "euclidean",
    "dtype"         :   str,
    "range"         :   ["euclidean","nanEuclidean","correlation","None"],
    "parent"        :   "statCenter",
    "parentType"    :   "Cluster (HClust) Settings",
    "description"   :   "Define metric used for column dendrogram. If None, no dendrogram will be shown. Only nanEuclidean can handle nans and is significantly slower.",
    },
    {
    "name"          :   "min.required.valid.values",
    "value"         :   3,
    "dtype"         :   int,
    "range"         :   [1,np.inf],
    "parent"        :   "intern",
    "parentType"    :   "Cluster (HClust) Settings",
    "description"   :   "Data with nan might be clustered using the nanEuclidean distance metric. This parameter defines the minimum number of valid values that must exist.",
    },
    {
    "name"          :   "rowMethod",
    "value"         :   "complete",
    "dtype"         :   str,
    "range"         :   ["complete","average"],
    "parent"        :   "statCenter",
    "parentType"    :   "Cluster (HClust) Settings",
    "description"   :   "Define method used for row dendrogram. If None, no dendrogra will be shown.",
    },
    {
    "name"          :   "columnMethod",
    "value"         :   "complete",
    "dtype"         :   str,
    "range"         :   ["complete","average"],
    "parent"        :   "statCenter",
    "parentType"    :   "Cluster (HClust) Settings",
    "description"   :   "Define method used for column dendrogram. If None, no dendrogra will be shown.",
    },
    {
    "name"          :   "keep.cluster.xaxis.fixed",
    "value"         :   True,
    "dtype"         :   bool,
    "range"         :   [True,False],
    "parent"        :   "intern",
    "parentType"    :   "Cluster (HClust) Settings",
    "description"   :   "If enabked, upon zoom the x-axis will remain at fixed limits.",
    },
    {
    "name"          :   "colorMapLimits",
    "value"         :   "raw values",
    "dtype"         :   str,
    "range"         :   ["raw values","center 0","min = -1, max = 1","custom"],
    "parent"        :   "intern",
    "parentType"    :   "Cluster (HClust) Settings",
    "description"   :   "Method how to calculate color map limits.",
    },
        {
    "name"          :   "colorMapLimits.min",
    "value"         :   0.0,
    "dtype"         :   float,
    "range"         :   [-np.inf,np.inf],
    "parent"        :   "intern",
    "parentType"    :   "Cluster (HClust) Settings",
    "description"   :   "Enabled if colorMapLimits is set to custom. Minimal value.",
    },
    {
    "name"          :   "colorMapLimits.max",
    "value"         :   1.0,
    "dtype"         :   float,
    "range"         :   [-np.inf,np.inf],
    "parent"        :   "intern",
    "parentType"    :   "Cluster (HClust) Settings",
    "description"   :   "Enabled if colorMapLimits is set to custom. Maximal value.",
    },
    {
    "name"          :   "colorMatrixMethod",
    "value"         :   "pearson",
    "dtype"         :   str,
    "range"         :   ["pearson","kendall","spearman"],
    "parent"        :   "plotterBrain",
    "parentType"    :   "Cluster (HClust) Settings",
    "description"   :   "Method how to calculate color map limits.",
    },
    {
    "name"          :   "cluster.label.limit",
    "value"         :   50,
    "dtype"         :   int,
    "range"         :   [0,np.inf],
    "parent"        :   "intern",
    "parentType"    :   "Cluster (HClust) Settings",
    "description"   :   "If less than given value of rows are visible in cluster, label will be added to the top right axis.",
    },
    {
    "name"          :   "quad.linewidth.rowLimit",
    "value"         :   70,
    "dtype"         :   int,
    "range"         :   [0,np.inf],
    "parent"        :   "intern",
    "parentType"    :   "Cluster (HClust) Settings",
    "description"   :   "If less than given value of rows are visible in cluster. Lines will be drawn around rectangles.",
    },
    {
    "name"          :   "quad.linewidth.columnLimit",
    "value"         :   70,
    "dtype"         :   int,
    "range"         :   [0,np.inf],
    "parent"        :   "intern",
    "parentType"    :   "Cluster (HClust) Settings",
    "description"   :   "If less than given value of columns are visible in cluster. Lines will be drawn around rectangles.",
    },
    {
    "name"          :   "corrmatrix.plot.type.upper.right",
    "value"         :   "heatmap",
    "dtype"         :   str,
    "range"         :   ["heatmap","scatter"],
    "parent"        :   "intern",
    "parentType"    :   "Cluster (HClust) Settings",
    "description"   :   "Plot type for correlation matirx. If set to heatmap a common correlation matrix will be plotted. If set to scatter a multi-scatter plot will be displayed.",
    },
    {
    "name"          :   "corrmatrix.plot.type.bottom.left",
    "value"         :   "heatmap",
    "dtype"         :   str,
    "range"         :   ["heatmap","scatter"],
    "parent"        :   "intern",
    "parentType"    :   "Cluster (HClust) Settings",
    "description"   :   "Plot type for correlation matirx. If set to heatmap a common correlation matrix will be plotted. If set to scatter a multi-scatter plot will be displayed.",
    },
    {
    "name"          :   "add.column.names.in.emb.name",
    "value"         :   True,
    "dtype"         :   bool,
    "range"         :   [True,False],
    "parent"        :   "intern",
    "parentType"    :   "Dimensional Reduction Settings",
    "description"   :   "If enable, adds the used column names in the name for the embedding."
    },    
    {
    "name"          :   "tsne.n.components",
    "value"         :   2,
    "dtype"         :   int,
    "range"         :   [1,100],
    "parent"        :   "intern",
    "parentType"    :   "Dimensional Reduction Settings",
    "description"   :   "Dimension of the embedded space."
    },
    {
    "name"          :   "tsne.perplexity",
    "value"         :   30,
    "dtype"         :   float,
    "range"         :   [0,np.inf],
    "parent"        :   "intern",
    "parentType"    :   "Dimensional Reduction Settings",
    "description"   :   """The perplexity is related to the number of nearest neighbors that 
                           is used in other manifold learning algorithms. Larger datasets usually 
                           require a larger perplexity. Consider selecting a value between 5 and 50. 
                           Different values can result in significantly different results."""
    },
    {
    "name"          :   "tsne.early_exaggeration",
    "value"         :   12,
    "dtype"         :   float,
    "range"         :   [0,np.inf],
    "parent"        :   "intern",
    "parentType"    :   "Dimensional Reduction Settings",
    "description"   :   """Controls how tight natural clusters in the original space are
                           in the embedded space and how much space will be between them. 
                           For larger values, the space between natural clusters will be 
                           larger in the embedded space. Again, the choice of this parameter 
                           is not very critical. If the cost function increases during initial 
                           optimization, the early exaggeration factor or the learning rate might 
                           be too high."""
    },
    
    {
    "name"          :   "umap.n.neighbors",
    "value"         :   15,
    "dtype"         :   int,
    "range"         :   [3,np.inf],
    "parent"        :   "statCenter",
    "parentType"    :   "Dimensional Reduction Settings",
    "description"   :   """This determines the number of neighboring points used in local 
                            approximations of manifold structure. Larger values will result 
                            in more global structure being preserved at the loss of detailed 
                            local structure. In general this parameter should often be in the 
                            range 5 to 50, with a choice of 10 to 15 being a sensible default."""
    },
    {
    "name"          :   "umap.min.dist",
    "value"         :   0.1,
    "dtype"         :   float,
    "range"         :   [0,0.5],
    "parent"        :   "statcenter",
    "parentType"    :   "Dimensional Reduction Settings",
    "description"   :   """This controls how tightly the embedding is allowed compress points together. 
                        Larger values ensure embedded points are more evenly distributed, 
                        while smaller values allow the algorithm to optimise more accurately with regard to local structure. 
                        ensible values are in the range 0.001 to 0.5, with 0.1 being a reasonable default"""
    },
    {
    "name"          :   "umap.metric",
    "value"         :   "euclidean",
    "dtype"         :   str,
    "range"         :   ["euclidean","correlation","seuclidean","manhattan","cityblock","braycurtis","cosine","dice","jaccard"],
    "parent"        :   "statcenter",
    "parentType"    :   "Dimensional Reduction Settings",
    "description"   :   """This controls how tightly the embedding is allowed compress points together. 
                        Larger values ensure embedded points are more evenly distributed, 
                        while smaller values allow the algorithm to optimise more accurately with regard to local structure. 
                        ensible values are in the range 0.001 to 0.5, with 0.1 being a reasonable default"""
    },
    {
    "name"          :   "umap.n.components",
    "value"         :   2,
    "dtype"         :   int,
    "range"         :   [1,100],
    "parent"        :   "statcenter",
    "parentType"    :   "Dimensional Reduction Settings",
    "description"   :   """The dimension of the space to embed into. This defaults to 2 to
                        provide easy visualization, but can reasonably be set to any
                        integer value in the range 2 to 100."""
    },
    {
    "name"          :   "pca.n.components",
    "value"         :   2,
    "dtype"         :   int,
    "range"         :   [1,100],
    "parent"        :   "intern",
    "parentType"    :   "Dimensional Reduction Settings",
    "description"   :   """The dimension of the space to embed into. This defaults to 2 to
                        provide easy visualization, but can reasonably be set to any
                        integer value in the range 2 to 100."""
    },
    {
    "name"          :   "pca.scale",
    "value"         :   True,
    "dtype"         :   bool,
    "range"         :   [True,False],
    "parent"        :   "intern",
    "parentType"    :   "Dimensional Reduction Settings",
    "description"   :   "If enabled, the mean is subtracted to scale data."
    },
    {
    "name"          :   "pca.add.current.grouping.only",
    "value"         :   True,
    "dtype"         :   bool,
    "range"         :   [True,False],
    "parent"        :   "intern",
    "parentType"    :   "Dimensional Reduction Settings",
    "description"   :   "If enabled, selected columns for PCA are annotated by the grouping. Otherwise test all exisiting groupings if columnNames overlap."
    },
    {
    "name"          :   "spectral.embedding.n.components",
    "value"         :   2,
    "dtype"         :   int,
    "range"         :   [1,100],
    "parent"        :   "intern",
    "parentType"    :   "Dimensional Reduction Settings",
    "description"   :   "The dimension of the projected subspace."
    },
    {
    "name"          :   "spectral.embedding.n.affinity",
    "value"         :   "nearest_neighbors",
    "dtype"         :   str,
    "range"         :   ["nearest_neighbors","rbf"],
    "parent"        :   "intern",
    "parentType"    :   "Dimensional Reduction Settings",
    "description"   :   "The dimension of the projected subspace."
    },

    {
    "name"          :   "mds.n.components",
    "value"         :   2,
    "dtype"         :   int,
    "range"         :   [1,100],
    "parent"        :   "intern",
    "parentType"    :   "Dimensional Reduction Settings",
    "description"   :   "Number of dimensions in which to immerse the dissimilarities."
    },
    {
    "name"          :   "mds.metric",
    "value"         :   True,
    "dtype"         :   bool,
    "range"         :   [True,False],
    "parent"        :   "intern",
    "parentType"    :   "Dimensional Reduction Settings",
    "description"   :   "If True, perform metric MDS; otherwise, perform nonmetric MDS."
    },
    {
    "name"          :   "isomap.n.neighbors",
    "value"         :   5,
    "dtype"         :   int,
    "range"         :   [1,100],
    "parent"        :   "intern",
    "parentType"    :   "Dimensional Reduction Settings",
    "description"   :   "Number of neighbors to consider for each point."
    },
    {
    "name"          :   "isomap.n.components",
    "value"         :   2,
    "dtype"         :   int,
    "range"         :   [1,100],
    "parent"        :   "intern",
    "parentType"    :   "Dimensional Reduction Settings",
    "description"   :   "Number of coordinates for the manifold."
    },
    {
    "name"          :   "isomap.path.method",
    "value"         :   "auto",
    "dtype"         :   str,
    "range"         :   ["auto", "FW", "D"],
    "parent"        :   "intern",
    "parentType"    :   "Dimensional Reduction Settings",
    "description"   :   """
                        ‘auto’ : attempt to choose the best algorithm automatically. 
                        ‘FW’ : Floyd-Warshall algorithm.
                        ‘D’ : Dijkstra’s algorithm.
                        """
    },
    {
    "name"          :   "locally.linear.n.components",
    "value"         :   2,
    "dtype"         :   int,
    "range"         :   [1,100],
    "parent"        :   "intern",
    "parentType"    :   "Dimensional Reduction Settings",
    "description"   :   "Number of coordinates for the manifold."
    },
    {
    "name"          :   "locally.linear.n.neighbors",
    "value"         :   5,
    "dtype"         :   int,
    "range"         :   [1,100],
    "parent"        :   "intern",
    "parentType"    :   "Dimensional Reduction Settings",
    "description"   :   "Number of neighbors to consider for each point."
    }, 
    {
    "name"          :   "locally.linear.method",
    "value"         :   "standard",
    "dtype"         :   str,
    "range"         :   ["standard","hessian","modified","ltsa"],
    "parent"        :   "intern",
    "parentType"    :   "Dimensional Reduction Settings",
    "description"   :   "Method for locally linear embedding algorithm."
    },
    {
    "name"          :   "locally.neighbors.algorithm",
    "value"         :   "auto",
    "dtype"         :   str,
    "range"         :   ["auto", "brute", "kd_tree", "ball_tree"],
    "parent"        :   "intern",
    "parentType"    :   "Dimensional Reduction Settings",
    "description"   :   "Algorithm to use for nearest neighbors search, passed to neighbors."
    },

    {
    "name"          :   "hclustClusterColorMap",
    "value"         :   "Paired",
    "dtype"         :   str,
    "range"         :   colorParameterRange,
    "parent"        :   "colorManager",
    "parentType"    :   "Cluster (HClust) Settings",
    "description"   :   "Colormap for cluster rectangles."
    }, 
    {
    "name"          :   "hclustLabelColorMap",
    "value"         :   "Paired",
    "dtype"         :   str,
    "range"         :   colorParameterRange,
    "parent"        :   "intern",
    "parentType"    :   "Cluster (HClust) Settings",
    "description"   :   "Colormap for color labeling."
    }, 
   
    {
    "name"          :   "barplotMetric",
    "value"         :   "mean",
    "dtype"         :   str,
    "range"         :   ["mean","median"],
    "parent"        :   "plotterBrain",
    "parentType"    :   "Barplot Settings",
    "description"   :   "Metric to calculate bar heights."
    }, 
    {
    "name"          :   "barplotError",
    "value"         :   "CI (95%)",
    "dtype"         :   str,
    "range"         :   ["Std","CI (95%)", "CI (90%)", "CI (85%)","CI (75%)", "SEM-CI (68%)"],
    "parent"        :   "plotterBrain",
    "parentType"    :   "Barplot Settings",
    "description"   :   "Error value in barplots."
    }, 
    {
    "name"          :   "boxbarviolin.border",
    "value"         :   0.25,
    "dtype"         :   float,
    "range"         :   [0,1],
    "parent"        :   "intern",
    "parentType"    :   "Barplot Settings",
    "description"   :   "Spacing between major elements measured by their width - e.g. 0.1 means that the border of a box is 0.1 its with. Bars separated by categorical column on x-axis consider the minor spacing."
    }, 
    {
    "name"          :   "barplot.minor.spacing",
    "value"         :   0,
    "dtype"         :   float,
    "range"         :   [0,1],
    "parent"        :   "intern",
    "parentType"    :   "Barplot Settings",
    "description"   :   "Spacing between minor bars."
    }, 
    {
    "name"          :   "WorkingDirectory",
    "value"         :   "./",
    "dtype"         :   str,
    "range"         :   "any",
    "parent"        :   "data",
    "parentType"    :   "General Settings",
    "description"   :   "Default Directory to save files/images to."
    }, 
    {
    "name"          :   "json.export.orient",
    "value"         :   "records",
    "dtype"         :   str,
    "range"         :   ["split", "records", "index", "columns", "values", "table"],
    "parent"        :   "data",
    "parentType"    :   "General Settings",
    "description"   :   "Default Directory to save files/images to."
    }, 
    {
    "name"          :   "perform.transformation.in.place",
    "value"         :   False,
    "dtype"         :   bool,
    "range"         :   [True,False],
    "parent"        :   "intern",
    "parentType"    :   "General Settings",
    "description"   :   "Perform transformation in place (no new columns created)"
    }, 
    
    {
    "name"          :   "exclusivesMinNonNaN",
    "value"         :   1,
    "dtype"         :   int,
    "range"         :   [1,np.inf],
    "parent"        :   "grouping",
    "parentType"    :   "Groups Settings",
    "description"   :   "Minimum required non-nan values in background to be called significant in target group."
    },
    {
    "name"          :   "clusterplot.method",
    "value"         :   "kmeans",
    "dtype"         :   str,
    "range"         :   clusterMethodNames,
    "parent"        :   "intern",
    "parentType"    :   "Clusterplot Settings",
    "description"   :   "Algorithm used to detect cluster."
    }, 
    {
    "name"          :   "clusterplot.type",
    "value"         :   "boxplot",
    "dtype"         :   str,
    "range"         :   ["boxplot","lineplot"],
    "parent"        :   "intern",
    "parentType"    :   "Clusterplot Settings",
    "description"   :   "Plot type how detected clusters are represented."
    }, 
    {
    "name"          :   "clusterplot.linewidth",
    "value"         :   0.5,
    "dtype"         :   float,
    "range"         :   [0.001,np.inf],
    "parent"        :   "intern",
    "parentType"    :   "Clusterplot Settings",
    "description"   :   "Line width of lineplots."
    }, 
    {
    "name"          :   "clusterplot.lineplot.color.distance",
    "value"         :   True,
    "dtype"         :   bool,
    "range"         :   [True,False],
    "parent"        :   "intern",
    "parentType"    :   "Clusterplot Settings",
    "description"   :   "If lineplot is selected, color the lines accordingly to the distance to the cluster center (k-means, birch)."
    }, 
    {
    "name"          :   "clusterplot.show.cluster.center",
    "value"         :   True,
    "dtype"         :   bool,
    "range"         :   [True,False],
    "parent"        :   "intern",
    "parentType"    :   "Clusterplot Settings",
    "description"   :   "Draw line to indicate cluster center (kmeans, birch)."
    }, 
    {
    "name"          :   "alpha.IQR",
    "value"         :   0.7,
    "dtype"         :   float,
    "range"         :   [0.01,1],
    "parent"        :   "intern",
    "parentType"    :   "Lineplot Settings",
    "description"   :   "Transparency for area indicating the IQR (first and third quantile)."
    },  
    {
    "name"          :   "linewidth.median",
    "value"         :   1.5,
    "dtype"         :   float,
    "range"         :   [0.01,np.inf],
    "parent"        :   "intern",
    "parentType"    :   "Lineplot Settings",
    "description"   :   "Linewidth for median in lineplots."
    }, 
    {
    "name"          :   "marker.median",
    "value"         :   "o",
    "dtype"         :   str,
    "range"         :   ["o","+","s",".","<",">","^","v",",","h"],
    "parent"        :   "intern",
    "parentType"    :   "Lineplot Settings",
    "description"   :   "Marker for median line."
    }, 
    {
    "name"          :   "markeredgewidth.median",
    "value"         :   0.5,
    "dtype"         :   float,
    "range"         :   [0.01,np.inf],
    "parent"        :   "intern",
    "parentType"    :   "Lineplot Settings",
    "description"   :   "Marker linewidth for median in lineplots."
    }, 
     {
    "name"          :   "linewidth.quickSelect",
    "value"         :   1.5,
    "dtype"         :   float,
    "range"         :   [0.01,np.inf],
    "parent"        :   "intern",
    "parentType"    :   "Lineplot Settings",
    "description"   :   "Linewidth for QuickSelect items in lineplots."
    }, 
    {
    "name"          :   "marker.quickSelect",
    "value"         :   "o",
    "dtype"         :   str,
    "range"         :   ["o","+","s",".","<",">","^","v",",","h"],
    "parent"        :   "intern",
    "parentType"    :   "Lineplot Settings",
    "description"   :   "Marker for QuickSelect lines."
    }, 
    {
    "name"          :   "markeredgewidth.quickSelect",
    "value"         :   0.5,
    "dtype"         :   float,
    "range"         :   [0.01,np.inf],
    "parent"        :   "intern",
    "parentType"    :   "Lineplot Settings",
    "description"   :   "Marker linewidth for QuickSelect items in lineplots."
    }, 
    {
    "name"          :   "histogramBins",
    "value"         :   15,
    "dtype"         :   int,
    "range"         :   [3,np.inf],
    "parent"        :   "plotterBrain",
    "parentType"    :   "Histogram Settings",
    "description"   :   "Number of bins to calculate for a histogram."
    }, 
    {
    "name"          :   "histogramCumulative",
    "value"         :   False,
    "dtype"         :   bool,
    "range"         :   [True,False],
    "parent"        :   "plotterBrain",
    "parentType"    :   "Histogram Settings",
    "description"   :   "Enable/Disable cumulative histogram."
    }, 
    {
    "name"          :   "histogramDensity",
    "value"         :   False,
    "dtype"         :   bool,
    "range"         :   [True,False],
    "parent"        :   "plotterBrain",
    "parentType"    :   "Histogram Settings",
    "description"   :   "Enable/Disable density calculation insteat of frequency."
    }, 
    {
    "name"          :   "histogramHisttype",
    "value"         :   "bar",
    "dtype"         :   str,
    "range"         :   ["bar", "barstacked", "step", "stepfilled"],
    "parent"        :   "plotterBrain",
    "parentType"    :   "Histogram Settings",
    "description"   :   "Enable/Disable cumulative histogram."
    }, 
    {
    "name"          :   "histogramLog",
    "value"         :   False,
    "dtype"         :   bool,
    "range"         :   [True,False],
    "parent"        :   "plotterBrain",
    "parentType"    :   "Histogram Settings",
    "description"   :   "Enable/Disable log transformation of values before histograms are calculated."
    }, 
    {
    "name"          :   "histogramLinewidth",
    "value"         :   2,
    "dtype"         :   float,
    "range"         :   [0.01,np.inf],
    "parent"        :   "plotterBrain",
    "parentType"    :   "Histogram Settings",
    "description"   :   "Linewidth if histtype == step."
    }, 
    {
    "name"          :   "histogramSortCategories",
    "value"         :   False,
    "dtype"         :   bool,
    "range"         :   [True,False],
    "parent"        :   "plotterBrain",
    "parentType"    :   "Histogram Settings",
    "description"   :   "Enable/Disable sorting of categories on grouping."
    }, 
    {
    "name"          :   "show.counts",
    "value"         :   True,
    "dtype"         :   bool,
    "range"         :   [True,False],
    "parent"        :   "intern",
    "parentType"    :   "Countplot Settings",
    "description"   :   "Enable/Disable labeling of bars with counts."
    }, 
    {
    "name"          :   "countTransform",
    "value"         :   "none",
    "dtype"         :   str,
    "range"         :   ["none","log2","log10","ln"],
    "parent"        :   "plotterBrain",
    "parentType"    :   "Countplot Settings",
    "description"   :   "Transforms counts for visualization. Labels will show real counts."
    },
    {
    "name"          :   "countplotLabelColorMap",
    "value"         :   "Set1",
    "dtype"         :   str,
    "range"         :   colorParameterRange,
    "parent"        :   "colorManager",
    "parentType"    :   "Countplot Settings",
    "description"   :   "Colormap used to indicate groups for each caategorical column.."
    },
    
    {
    "name"          :   "counts.marker",
    "value"         :   "o",
    "dtype"         :   str,
    "range"         :   ["o","+","s",".","<",">","^","v",",","h"],
    "parent"        :   "intern",
    "parentType"    :   "Countplot Settings",
    "description"   :   "Marker symbol for countplots."
    }, 
    {
    "name"          :   "counts.markersize",
    "value"         :   10,
    "dtype"         :   float,
    "range"         :   [0.01,np.inf],
    "parent"        :   "intern",
    "parentType"    :   "Countplot Settings",
    "description"   :   "Marker symbol size for countplots."
    }, 
    {
    "name"          :   "counts.markerfacecolor",
    "value"         :   "#FFFFFF",
    "dtype"         :   str,
    "range"         :   "regExMatch",
    "parent"        :   "intern",
    "parentType"    :   "Countplot Settings",
    "description"   :   "Marker symbol facecolor for countplots.",
    "regEx"         :   r"^#(?:[0-9a-fA-F]{6}){1,2}$"
    }, 
    {
    "name"          :   "counts.markeredgecolor",
    "value"         :   "#2E2E2E",
    "dtype"         :   str,
    "range"         :   "regExMatch",
    "parent"        :   "intern",
    "parentType"    :   "Countplot Settings",
    "description"   :   "Marker symbol edgecolor for countplots.",
    "regEx"         :   r"^#(?:[0-9a-fA-F]{6}){1,2}$"
    }, 
    {
    "name"          :   "counts.linestyle",
    "value"         :   "-",
    "dtype"         :   str,
    "range"         :   ["-",".","--","-."],
    "parent"        :   "intern",
    "parentType"    :   "Countplot Settings",
    "description"   :   "Line style for group indicators countplots."
    }, 
    {
    "name"          :   "counts.linewidth",
    "value"         :   0.8,
    "dtype"         :   float,
    "range"         :   [0.01,np.inf],
    "parent"        :   "intern",
    "parentType"    :   "Countplot Settings",
    "description"   :   "Line width for group indicators countplots."
    },
    {
    "name"          :   "counts.linecolor",
    "value"         :   "#1d1d1b",
    "dtype"         :   str,
    "range"         :   "regExMatch",
    "parent"        :   "intern",
    "parentType"    :   "Countplot Settings",
    "description"   :   "Linecolor for group indicator in countplots.",
    "regEx"         :   r"^#(?:[0-9a-fA-F]{6}){1,2}$"
    }, 
    {
    "name"          :   "quantile.norm.scaling",
    "value"         :   True,
    "dtype"         :   bool,
    "range"         :   [False,True],
    "parent"        :   "intern",
    "parentType"    :   "Normalization Settings",
    "description"   :   "Quantile normalization. Enable/disable scaling of data to unit variance",
    }, 
    {
    "name"          :   "quantile.norm.centering",
    "value"         :   True,
    "dtype"         :   bool,
    "range"         :   [False,True],
    "parent"        :   "intern",
    "parentType"    :   "Normalization Settings",
    "description"   :   "Quantile normalization. Enable/disable centering of data before scaling.",
    }, 
    {
    "name"          :   "outlier.iqr.multiply",
    "value"         :   1.8,
    "dtype"         :   float,
    "range"         :   [0.01,np.inf],
    "parent"        :   "intern",
    "parentType"    :   "Outlier Settings",
    "description"   :   "Removes outlies by calculating the inter qunatile range and multiply with this factor..",
    }, 
    {
    "name"          :   "outlier.copy.results",
    "value"         :   True,
    "dtype"         :   bool,
    "range"         :   [True,False],
    "parent"        :   "intern",
    "parentType"    :   "Outlier Settings",
    "description"   :   "If enabled, results with removed outliers (set to NaN) will be copied and concatenated. Otherwise data will just be replaced.",
    }, 
    {
    "name"          :   "report.distance.space",
    "value"         :   False,
    "dtype"         :   bool,
    "range"         :   [True,False],
    "parent"        :   "intern",
    "parentType"    :   "Cluster (K-Means) Settings",
    "description"   :   "If enabled, reports the new space, each dimension is the distance to the cluster centers..",
    }, 
    {
    "name"          :   "kmeans.default.number.clusters",
    "value"         :   8,
    "dtype"         :   int,
    "range"         :   [2,np.inf],
    "parent"        :   "intern",
    "parentType"    :   "Cluster (K-Means) Settings",
    "description"   :   "Number of clusters. Will be used by the cluster plot.",
    }, 
    {
    "name"          :   "feature.create.subset",
    "value"         :   True,
    "dtype"         :   bool,
    "range"         :   [True,False],
    "parent"        :   "intern",
    "parentType"    :   "Feature Selection Settings",
    "description"   :   "If enabled, feature selection will create a new subset of the data.",
    }, 
    {
    "name"          :   "feature.selection.alpha",
    "value"         :   0.05,
    "dtype"         :   float,
    "range"         :   [0.00000001,1],
    "parent"        :   "intern",
    "parentType"    :   "Feature Selection Settings",
    "description"   :   "Alpha for False positive and false discovery rate calculations for the ANOVA result.",
    }, 
    {
    "name"          :   "feature.selection.num",
    "value"         :   10,
    "dtype"         :   int,
    "range"         :   [1,np.inf],
    "parent"        :   "intern",
    "parentType"    :   "Feature Selection Settings",
    "description"   :   "Number of features selected by model (SVM, random forest).",
    }, 
    {
    "name"          :   "feature.scale.data",
    "value"         :   True,
    "dtype"         :   bool,
    "range"         :   [True,False],
    "parent"        :   "intern",
    "parentType"    :   "Feature Selection Settings",
    "description"   :   "If enabled, scales data before selection by model. (Z-score)",
    }, 
    {
    "name"          :   "feature.svm.c",
    "value"         :   1,
    "dtype"         :   float,
    "range"         :   [0.0000001,np.inf],
    "parent"        :   "intern",
    "parentType"    :   "Feature Selection Settings",
    "description"   :   "Regularization parameter. The strength of the regularization is inversely proportional to C. Must be strictly positive. The penalty is a squared l2 penalty. (from sklearn website)",
    }, 
    {
    "name"          :   "feature.randomforest.n_estimators",
    "value"         :   100,
    "dtype"         :   int,
    "range"         :   [10,np.inf],
    "parent"        :   "intern",
    "parentType"    :   "Feature Selection Settings",
    "description"   :   "The number of trees in the forest.",
    }, 
    {
    "name"          :   "feature.randomforest.min_samples_split",
    "value"         :   2,
    "dtype"         :   int,
    "range"         :   [2,np.inf],
    "parent"        :   "intern",
    "parentType"    :   "Feature Selection Settings",
    "description"   :   "The minimum number of samples required to split an internal node.",
    }, 
    {
    "name"          :   "feature.variance,threshold",
    "value"         :   0.0,
    "dtype"         :   float,
    "range"         :   [0.0,np.inf],
    "parent"        :   "intern",
    "parentType"    :   "Feature Selection Settings",
    "description"   :   "Features with a training-set variance lower than this threshold will be removed.",
    }, 
    {
    "name"          :   "recursive.feature.elimination.cv",
    "value"         :   5,
    "dtype"         :   int,
    "range"         :   [3,np.inf],
    "parent"        :   "intern",
    "parentType"    :   "Feature Selection Settings",
    "description"   :   "Number of cross validations performed.",
    }, 
    {
    "name"          :   "recursive.feature.elimination.min_features_to_select",
    "value"         :   5,
    "dtype"         :   int,
    "range"         :   [3,np.inf],
    "parent"        :   "intern",
    "parentType"    :   "Feature Selection Settings",
    "description"   :   "The minimum number of features to be selected.",
    }, 
    {
    "name"          :   "hdbscan.min.cluster.size",
    "value"         :   8,
    "dtype"         :   int,
    "range"         :   [1,np.inf],
    "parent"        :   "intern",
    "parentType"    :   "Cluster (HDBSCAN) Settings",
    "description"   :   "The minimum cluster size.",
    }, 
    {
    "name"          :   "hdbscan.min.samples",
    "value"         :   2,
    "dtype"         :   int,
    "range"         :   [0,np.inf],
    "parent"        :   "intern",
    "parentType"    :   "Cluster (HDBSCAN) Settings",
    "description"   :   "The larger the value of min_samples you provide, the more conservative the clustering – more points will be declared as noise, and clusters will be restricted to progressively more dense areas.",
    }, 
    {
    "name"          :   "hdbscan.cluster.selection.epsilon",
    "value"         :   0.0,
    "dtype"         :   float,
    "range"         :   [0,np.inf],
    "parent"        :   "intern",
    "parentType"    :   "Cluster (HDBSCAN) Settings",
    "description"   :   "Selecting a value for cluster_selection_epsilon helps us to merge clusters in these regions. Or in other words, it ensures that clusters below the given threshold are not split up any further.",
    }, 
    {
    "name"          :   "swarm.scatter.marker",
    "value"         :   "o",
    "dtype"         :   str,
    "range"         :   ["o","+","s",".","<",">","^","v",",","h"],
    "parent"        :   "intern",
    "parentType"    :   "Add Swarm Settings",
    "description"   :   "Marker for swarms that are added to charts (boxplot, barplot, violinplot)."
    }, 
    {
    "name"          :   "swarm.scatterSize",
    "value"         :   20.0,
    "dtype"         :   float,
    "range"         :   [1.0,np.inf],
    "parent"        :   "intern",
    "parentType"    :   "Add Swarm Settings",
    "description"   :   "Size of swarms that are added to charts (boxplot, barplot, violinplot). The default swarm size (no addition) is set by the parameter scatterSize (Scatter Settings).",
    }, 
    {
    "name"          :   "swarm.facecolor",
    "value"         :   "#ffffff",
    "dtype"         :   str,
    "range"         :   "regExMatch",
    "parent"        :   "intern",
    "parentType"    :   "Add Swarm Settings",
    "description"   :   "Facecolor of swarm scatter points.",
    "regEx"         :   r"^#(?:[0-9a-fA-F]{6}){1,2}$"
    },
    {
    "name"          :   "swarm.alpha",
    "value"         :   0.6,
    "dtype"         :   float,
    "range"         :   [0.0001,1],
    "parent"        :   "intern",
    "parentType"    :   "Add Swarm Settings",
    "description"   :   "Transparancy of swarms that are added to charts (boxplot, barplot, violinplot).",
    },
    {
    "name"          :   "scale.numeric.x.axis",
    "value"         :   False,
    "dtype"         :   bool,
    "range"         :   [True,False],
    "parent"        :   "intern",
    "parentType"    :   "Pointplot Settings",
    "description"   :   "If x axis category can be transformed to numeric values using the split param (below), then scale the x axis ticks correctly.",
    },
    {
    "name"          :   "split.string.x.category",
    "value"         :   " ",
    "dtype"         :   str,
    "range"         :   "any",
    "parent"        :   "intern",
    "parentType"    :   "Pointplot Settings",
    "description"   :   "String used to extract numeric data from categories.",
    },
    {
    "name"          :   "split.string.index",
    "value"         :   0,
    "dtype"         :   int,
    "range"         :   [0,np.inf],
    "parent"        :   "intern",
    "parentType"    :   "Pointplot Settings",
    "description"   :   "Split index to find numeric values. Example '5_min' - using split string '_' and index 0 will yield 5",
    },
    {
    "name"          :   "main.figure.size.scaling",
    "value"         :   True,
    "dtype"         :   bool,
    "range"         :   [True,False],
    "parent"        :   "intern",
    "parentType"    :   "Main Figure Settings",
    "description"   :   "Enable/Disable scaling if scatter point sizes by calculating the ratio between axes (main vs export).",
    },
    {
    "name"          :   "quick.select.separator",
    "value"         :   ";",
    "dtype"         :   str,
    "range"         :   "any",
    "parent"        :   "intern",
    "parentType"    :   "QuickSelect Settings",
    "description"   :   "Default separator used to identify unique categories.",
    },
        {
    "name"          :   "quick.select.case.sensitive",
    "value"         :   False,
    "dtype"         :   bool,
    "range"         :   [True,False],
    "parent"        :   "intern",
    "parentType"    :   "QuickSelect Settings",
    "description"   :   "Upon loading saved selected lists and/or pasting a list of strings, quick select items are compare with or without case sensititivy.",
    },
    {
    "name"          :   "xy.plot.separate.column.pairs",
    "value"         :   True,
    "dtype"         :   bool,
    "range"         :   [True,False],
    "parent"        :   "intern",
    "parentType"    :   "XYPlot Settings",
    "description"   :   "If enabled, numeric pairs are separeted into differen axis.",
    },
    {
    "name"          :   "xy.plot.against.index",
    "value"         :   True,
    "dtype"         :   bool,
    "range"         :   [True,False],
    "parent"        :   "intern",
    "parentType"    :   "XYPlot Settings",
    "description"   :   "If enabled, data will be plotted against the index. If this option is enabled, it overwrites the single.x option below.",
    },
    {
    "name"          :   "xy.plot.single.x",
    "value"         :   True,
    "dtype"         :   bool,
    "range"         :   [True,False],
    "parent"        :   "intern",
    "parentType"    :   "XYPlot Settings",
    "description"   :   "If enabled, the first column is used as a common x axis. If disabled, eevery second column will be considered as a x-axis.",
    },
    {
    "name"          :   "xy.plot.show.marker",
    "value"         :   True,
    "dtype"         :   bool,
    "range"         :   [True,False],
    "parent"        :   "intern",
    "parentType"    :   "XYPlot Settings",
    "description"   :   "If enabled, each data point (row) is indicated by a marker.",
    },
    {
    "name"          :   "xy.plot.stem.mode",
    "value"         :   True,
    "dtype"         :   bool,
    "range"         :   [True,False],
    "parent"        :   "intern",
    "parentType"    :   "XYPlot Settings",
    "description"   :   "If enabled, plot plots vertical lines at each x location from the baseline to y, and places a marker there.",
    },
    {
    "name"          :   "xy.plot.bottom.stem",
    "value"         :   0,
    "dtype"         :   float,
    "range"         :   [-np.inf,np.inf],
    "parent"        :   "intern",
    "parentType"    :   "XYPlot Settings",
    "description"   :   "Baseline location in stemplot.",
    },
    {
    "name"          :   "xy.plot.marker",
    "value"         :   "o",
    "dtype"         :   str,
    "range"         :   ["o","P","s","<",">","^","v",",","h"],
    "parent"        :   "intern",
    "parentType"    :   "XYPlot Settings",
    "description"   :   "If enabled, each data point (row) is indicated by a marker.",
    },
    {
    "name"          :   "xy.plot.marker.size",
    "value"         :   5,
    "dtype"         :   float,
    "range"         :   [0,np.inf],
    "parent"        :   "intern",
    "parentType"    :   "XYPlot Settings",
    "description"   :   "Marker size.",
    },
    {
    "name"          :   "xy.plot.marker.edge.width",
    "value"         :   0.2,
    "dtype"         :   float,
    "range"         :   [0,np.inf],
    "parent"        :   "intern",
    "parentType"    :   "XYPlot Settings",
    "description"   :   "Stroke width of markers.",
    },
    {
    "name"          :   "xy.plot.line.style",
    "value"         :   "dashed",
    "dtype"         :   str,
    "range"         :   ["solid","dashed","dotted","dashdot","dashed","densely dotted","dashdotdotted"],
    "parent"        :   "intern",
    "parentType"    :   "XYPlot Settings",
    "description"   :   "If enabled, each data point (row) is indicated by a marker.",
    },
    {
    "name"          :   "xy.plot.linewidth",
    "value"         :   0.5,
    "dtype"         :   float,
    "range"         :   [0.01,np.inf],
    "parent"        :   "intern",
    "parentType"    :   "XYPlot Settings",
    "description"   :   "Linewidth in XY plots.",
    },
    {
    "name"          :   "xy.plot.alpha",
    "value"         :   0.75,
    "dtype"         :   float,
    "range"         :   [0.01,1],
    "parent"        :   "intern",
    "parentType"    :   "XYPlot Settings",
    "description"   :   "Transparancy of xy plot items.",
    },
    {
    "name"          :   "forest.plot.calculated.data",
    "value"         :   True,
    "dtype"         :   bool,
    "range"         :   [True,False],
    "parent"        :   "intern",
    "parentType"    :   "Forestplot Settings",
    "description"   :   "If true, it is assumed that you provided numeric columns for (mean,CI_lower,CI_upper).",
    },
    {
    "name"          :   "forest.plot.markersize",
    "value"         :   15,
    "dtype"         :   float,
    "range"         :   [1,np.inf],
    "parent"        :   "intern",
    "parentType"    :   "Forestplot Settings",
    "description"   :   "Size of forestplot marker.",
    },
    {
    "name"          :   "forest.plot.use.colormap",
    "value"         :   True,
    "dtype"         :   bool,
    "range"         :   [True,False],
    "parent"        :   "intern",
    "parentType"    :   "Forestplot Settings",
    "description"   :   "If true, the circles of the mean will be colored using the currently selected colormap. If false the color given by forest.plot.marker.color is used.",
    },
    {
    "name"          :   "forest.plot.marker.color",
    "value"         :   "#ffffff",
    "dtype"         :   str,
    "range"         :   "regExMatch",
    "parent"        :   "intern",
    "parentType"    :   "Forestplot Settings",
    "description"   :   "Facecolor of forestplot marker points.",
    "regEx"         :   r"^#(?:[0-9a-fA-F]{6}){1,2}$"
    },
    {
    "name"          :   "forest.plot.marker",
    "value"         :   "o",
    "dtype"         :   str,
    "range"         :   ["o","P","s","<",">","^","v",",","h"],
    "parent"        :   "intern",
    "parentType"    :   "Forestplot Settings",
    "description"   :   "Marker type in forest plots.",
    },
    {
    "name"          :   "forest.plot.line.color",
    "value"         :   "#504f4e",
    "dtype"         :   str,
    "range"         :   "regExMatch",
    "parent"        :   "intern",
    "parentType"    :   "Forestplot Settings",
    "description"   :   "Facecolor of forestplot marker points.",
    "regEx"         :   r"^#(?:[0-9a-fA-F]{6}){1,2}$"
    },
    {
    "name"          :   "forest.plot.line.width",
    "value"         :   0.5,
    "dtype"         :   float,
    "range"         :   [0,np.inf],
    "parent"        :   "intern",
    "parentType"    :   "Forestplot Settings",
    "description"   :   "Linewidth of forestplot lines.",
    },
    {
    "name"          :   "forest.plot.lower.bound.color",
    "value"         :   "#503a61",
    "dtype"         :   str,
    "range"         :   "regExMatch",
    "parent"        :   "intern",
    "parentType"    :   "Forestplot Settings",
    "description"   :   "Facecolor of forestplot lower boundmarker points.",
    "regEx"         :   r"^#(?:[0-9a-fA-F]{6}){1,2}$"
    },
    {
    "name"          :   "forest.plot.upper.bound.color",
    "value"         :   "#237561",
    "dtype"         :   str,
    "range"         :   "regExMatch",
    "parent"        :   "intern",
    "parentType"    :   "Forestplot Settings",
    "description"   :   "Facecolor of forestplot upper boundmarker points.",
    "regEx"         :   r"^#(?:[0-9a-fA-F]{6}){1,2}$"
    },
    {
    "name"          :   "forest.plot.bound.marker",
    "value"         :   "o",
    "dtype"         :   str,
    "range"         :   ["o","P","s","<",">","^","v",",","h"],
    "parent"        :   "intern",
    "parentType"    :   "Forestplot Settings",
    "description"   :   "Marker type in forest plots.",
    },
    {
    "name"          :   "forest.plot.line.ratio.one",
    "value"         :   True,
    "dtype"         :   bool,
    "range"         :   [True,False],
    "parent"        :   "intern",
    "parentType"    :   "Forestplot Settings",
    "description"   :   "Add a vertical line at x-value one.",
    },
    {
    "name"          :   "forest.plot.cont.table.ratio",
    "value"         :   "oddsRatio",
    "dtype"         :   str,
    "range"         :   ["oddsRatio","riskRatio","logOddsRatio"],
    "parent"        :   "intern",
    "parentType"    :   "Forestplot Settings",
    "description"   :   "Ratio to plot in the forest plot.",
    },
    {
    "name"          :   "word.cloud.categories_to_frequencies",
    "value"         :   True,
    "dtype"         :   bool,
    "range"         :   [True,False],
    "parent"        :   "intern",
    "parentType"    :   "WordCloud Settings",
    "description"   :   "If enabled, frequencies are determined by using each row as a unique value. You can split categories based on a string (set split string, for GOTerms for example to ';'."
    },
    {
    "name"          :   "word.cloud.split_string",
    "value"         :   ";",
    "dtype"         :   str,
    "range"         :   "any",
    "parent"        :   "intern",
    "parentType"    :   "WordCloud Settings",
    "description"   :   "If categories_to_frequencies is enabled, unique values are found by splitting row strings by this string."
    },
    {
    "name"          :   "word.cloud.min_font_size",
    "value"         :   4,
    "dtype"         :   int,
    "range"         :   [1,np.inf],
    "parent"        :   "intern",
    "parentType"    :   "WordCloud Settings",
    "description"   :   "Minimal font size used.",
    },
    {
    "name"          :   "word.cloud.max_font_size",
    "value"         :   80,
    "dtype"         :   int,
    "range"         :   [1,np.inf],
    "parent"        :   "intern",
    "parentType"    :   "WordCloud Settings",
    "description"   :   "Maximal font size used.",
    },
    {
    "name"          :   "word.cloud.max_words",
    "value"         :   400,
    "dtype"         :   int,
    "range"         :   [3,np.inf],
    "parent"        :   "intern",
    "parentType"    :   "WordCloud Settings",
    "description"   :   "Maximal number of words.",
    },
    {
    "name"          :   "word.cloud.background_color",
    "value"         :   "#ffffff",
    "dtype"         :   str,
    "range"         :   "regExMatch",
    "parent"        :   "intern",
    "parentType"    :   "WordCloud Settings",
    "description"   :   "Background color of word cloud.",
    "regEx"         :   r"^#(?:[0-9a-fA-F]{6}){1,2}$"
    },
    {
    "name"          :   "word.cloud.normalize_plurals",
    "value"         :   True,
    "dtype"         :   bool,
    "range"         :   [True,False],
    "parent"        :   "intern",
    "parentType"    :   "WordCloud Settings",
    "description"   :   "Whether to remove trailing 's' from words. Ignore if generate_from_frequencies is True."
    },
    {
    "name"          :   "word.cloud.include_numbers",
    "value"         :   False,
    "dtype"         :   bool,
    "range"         :   [True,False],
    "parent"        :   "intern",
    "parentType"    :   "WordCloud Settings",
    "description"   :   "Whether to include numbers as phrases or not. Ignore if generate_from_frequencies is True."
    },
    {
    "name"          :   "mt.method",
    "value"         :   "fdr_bh",
    "dtype"         :   str,
    "range"         :   MTMethods,
    "parent"        :   "intern",
    "parentType"    :   "Multiple Testing Correction Settings",
    "description"   :   "Default method for multiple testing correction."
    },
    {
    "name"          :   "mt.add.categorical.column",
    "value"         :   True,
    "dtype"         :   bool,
    "range"         :   [True,False],
    "parent"        :   "intern",
    "parentType"    :   "Multiple Testing Correction Settings",
    "description"   :   "If True, categorical column will be added indicating by '+' if hypothesis can be rejected for given alpha."
    },
    {
    "name"          :   "mt.alpha",
    "value"         :   0.05,
    "dtype"         :   float,
    "range"         :   [0,1],
    "parent"        :   "intern",
    "parentType"    :   "Multiple Testing Correction Settings",
    "description"   :   "FWER, family-wise error rate."
    },
    ]
    


#     encodingsCommonInPython = ['utf-8','ascii','ISO-8859-1','iso8859_15','cp037','cp1252','big5','euc_jp']
# commonSepartor = ['tab',',','space',';','/','&','|','^','+','-']
# decimalForFloats = ['.',','] 
# compressionsForSourceFile = ['infer','gzip', 'bz2', 'zip', 'xz']
# nanReplaceString = ['-','None', 'nan','  ']
# thoursandsString = ['None',',','.']
# comboBoxToGetInputFromUser = OrderedDict([('Encoding:',encodingsCommonInPython),
# 											('Column Separator:',commonSepartor),
# 											('Decimal Point String:',decimalForFloats),
# 											('Thousand Separator:',thoursandsString),
# 											('Decompression:',compressionsForSourceFile),
# 											('Skip Rows:',[str(x) for x in range(0,20)]),
# 											('Replace NaN in Object Columns:',nanReplaceString)])